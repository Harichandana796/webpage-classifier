<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<meta content="Mozilla/4.75 [en] (X11; U; SunOS 5.7 sun4u) [Netscape]" name="GENERATOR"/>
<title>CSCE421/821: Foundations of Constraint Processing</title>
</head>
<body alink="#FF0000" bgcolor="#FFFFFF" link="#0000EE" text="#000000" vlink="#551A8B">
<center>
<h1>
CSCE421/821, Fall 2002: Foundations of Constraint Processing</h1></center>
<p><br/><b><i><font size="+1"><font color="#FF0000">Annnouncement:
</font><font color="#006600">we
will try to have at least one researcher from the industry to talk about
the market of this technology, techniques implemented in industrial products, 
and commercial success stories.</font></font></i></b>
</p><p><b>Prereq: </b>CSCE310 (Data structures and algorithms) and CSCE476/876
(Introduction to AI) or <b><i>permission of instructor.</i></b>
</p><p><b>Course description:</b>   Constraint Satisfaction has emerged
as a successful approach to articulate and solve many industrial problems
such as design, network diagnosis, vision, scheduling, and resource management
in wireless networks.  This technology is now the basis for new programming
languages and innovative commercial systems for production scheduling,
product configuration, personnel planning and time-tabling, etc. 
This course reviews the foundations of constraint satisfaction and the
basic mechanisms developed in this area.  It also covers issues on
modeling and representation,  special types of constraints such as
temporal constraint networks, and theoretical and empirical evaluation 
of problem `difficulty.'  The course will examine in particular new
methods for decomposition and symmetry identification, designed to overcome
the complexity barrier and to support interactions with users.
</p><p><b>Time: </b>Tuesday, Thursday, from 9:30 a.m. to 10:45 a.m.
</p><p><b>Place</b>: Ferguson 112.
</p><p><b>Instructor</b>:   Berthe Y. Choueiry
<br/>                     
Room 104, Ferguson Hall,
<br/>                     
email: choueiry@cse.unl.edu, tel: (402)472-5444.
<br/>                     
Office hours:  Tue/Thu from 10:45 a.m. to 12:00 p.m., or by appointment.
</p><p><b>TA:   Mr. Andrew Breiner</b>
<br/><b>         email: abreiner@cse.unl.edu</b>
<br/><b>         Office location:
Building 501, Room 6, Desk 14</b>
<br/><b>         Office hours:</b>
</p><ul>
<ul>
<li>
<b>Monday, from 10:00 to 11:00 am,</b></li>
<li>
<b>Wednesday from 12:00 to 1:00 pm</b></li>
<li>
<b>by appointment</b></li>
</ul>
</ul>
<b>For quick response,</b> email cse421@cse.unl.edu.  Your message
will be forwarded to both  TA and instructor.
<p>In an effort to provide you with the best possible support, the following
research assistants will be holding office hours:
</p><ul>
<li>
Dan Buettner, Tuesday from 2:00 to 3:00 pm, Building 501, Room 3, buettner@cse.unl.edu</li>
<li>
Lin Xu, Thursday from 2:00 to 3:00 pm, Building 501, Room 3, lxu@cse.unl.edu</li>
<li>
Hui Zou, Friday from 11:00 am to 12:00 pm, Building 501, Room 3, hzou@cse.unl.edu</li>
</ul>
<img height="12" src="new.gif" width="31"/>Lisp help sessions by <a href="http://csce.unl.edu/~emoss/">Eric
Moss (</a>emoss@cse.unl.edu), tor those the search competition, and all
others.  Every Thu starting 7:00 pm.
<p><b><blink><a href="schedule.html">Class schedule:</a></blink></b> the
page will be regularly updated. Check it out <i>regularly</i> for reference
to required and recommended reading material, homework texts, and announcements.
</p><p><b>Topics include but are not restricted to:</b>
</p><ul>
<li>
Properties, computational complexity,  and practical importance.</li>
<li>
Theoretical and empirical classification of backtracking algorithms.</li>
<li>
Theoretical and empirical classification of static and dynamic ordering
heuristics.</li>
<li>
Phase transition.</li>
<li>
Global and local consistency: algorithms, properties, and computational
complexity.</li>
<li>
Islands of tractability for minimality and global consistency.</li>
<li>
Modeling and reduction methods between representations.</li>
<li>
Decomposition.</li>
<li>
Symmetries and their approximations.</li>
<li>
Reformulation and abstraction.</li>
<li>
Temporal constraint networks.</li>
<li>
Extension: Dynamic/conditional constraint satisfaction,   constraint
optimization.</li>
<li>
More, depending on class' interests.</li>
</ul>
<b>Support:</b>
<ul>
<li>
Edward Tsang, <i>Foundations of Constraint Satisfaction</i>. Available
from instructor.</li>
<li>
Rina Dechter, <i>Constraint Processing</i>.  In preparation, check
with instructor.</li>
<li>
Technical papers given by instructor or available from the <a href="http://www.unl.edu/libr/ereservs/contents/csce421/csce421.html">Electronic
Reserve </a>at the Love Library.</li>
</ul>
<b>Protocol of the course:</b>
<ul>
<li>
Lectures by instructor, twice per week.</li>
<li>
The workload will consist of:</li>
<ul>
<li>
<i><u>Required and recommended reading: </u></i>as  indicated in the<a href="schedule.html">
Class schedule.</a>   The content of the course will be dynamically
adapted to students interests and performance.</li>
<li>
<i><u>Programming, theoretical, and library-search assignments</u>:  </i>
Programming assignments  homework must be turned in using the UNIX
handin program on cse.unl.edu and turned in  before class on the due
date.  Pen-and-paper assignments must be given to the instructor right
before the lecture on the due date. Late homeworks are subject to a 20%
deduction per day (including week-ends), any second after the due date
counts as an entire day.  Programming assignments can be done in any
programming language.  When code and data structures are provided,
they will be mostly in Common Lisp (advice: use Allegro Common Lisp on
Linux or a sun workstation).  Students are kindly requested to indicate
how much time they approximately spend on each exercise; this information
will be aggregated and used for planning purposes: it does not affect grading
and the evaluation of individuals.</li>
<li>
<i><u>Surprise quizzes: </u></i>There will be surprise quizzes throughout
the semester  (with a frequency inversely proportional to students' 
attendance).  Quizzes will address all material covered during the
lectures and/or by the required reading.  No books or personal notes
are allowed during the quizzes, unless explicitly specified. <b>Quizzes
cannot be made up.</b></li>
<li>
<i><u>Tests: </u></i>There will be a pre-test only.  <b>Test cannot
be made up except by instructor's permission.</b></li>
<li>
<i><u>Search competition:</u></i> Students will receive code and data that
model a real-world application, all in LISP. Students will choose some
search mechanism and implement it.  Results will be compared, winner
will receive a book-gift certificate.</li>
<li>
<i><u>Project</u></i>: research, report, and  presentation: The project
can be either a literature study/survey or the implementation of algorithms. 
A presentation to the class is mandatory. The grade will take into account
the quality of the research, report, and presentation.</li>
</ul>
<li>
It is the student's responsibility to ensure an account on  CSE 
computers.</li>
<li>
Discussions among students, instructor, and TA are encouraged.  Homeworks
however are a <i>strictly</i> individual activity: <i>no sharing is permitted</i>
(unless when specified by instructor).  Unethical behavior will be
heavily sanctioned (e.g., a null grade on the task, department will be
informed). <b>Absolute rule: Always acknowledge any help received from
other individuals and always fully reference material used (e.g., encyclopedia,
book, paper, journal, web site).</b></li>
<li>
Absence: maximum 4 sessions, advanced notice required. Attendance is taken. 
Students are responsible for the material covered and announcements made
during the class.  Also, there will be surprise quizzes.</li>
</ul>
<b>Grading policy:</b>
<ul>
<li>
Grades will be allocated as follows</li>
<ul>
<li>
Pretest: 3%.</li>
<li>
Quizzes:  32%</li>
<li>
Assignments: 30%</li>
<li>
Individual project</li>
<ul>
<li>
Search competition: Solving a real-world optimization problem (in Lisp):
35% (Code: 25%, Report: 10%)</li>
<li>
Project: 35%.  (Research and report: 25%. Presentation: 10%.)</li>
</ul>
</ul>
</ul>
<b>How can I imporve my grade?</b>
<ul>
<li>
Make a presentation of a research paper in class: 10% per presentation.</li>
<li>
Make a critical summary of research papers/topics discussed in class: 5%
per summary.</li>
<li>
Write a chapter of a textbook: 20% per chapter.</li>
<li>
Do the weekly and final glossaries:<strike> 5% (total). <img height="12" src="new.gif" width="31"/></strike>Increased
to 10% by popular demand.</li>
<li>
Bonuses will be awarded to students who attend all lectures, interact lively,
and participate in discussion in class.</li>
</ul>
<b>Grade conversion</b>:
<center><table border="" cols="2" nosave="" width="20%">
<tr align="CENTER" nosave="">
<td nosave="">
<center>&gt;97%</center>
</td>
<td>
<center>A+</center>
</td>
</tr>
<tr>
<td>
<center>94-96</center>
</td>
<td>
<center>A</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center>90--93</center>
</td>
<td>
<center>A-</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center> 87--89</center>
</td>
<td>
<center>B+</center>
</td>
</tr>
<tr>
<td>
<center>84--86</center>
</td>
<td>
<center>B</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center>80--83</center>
</td>
<td>
<center>B-</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center>75--79</center>
</td>
<td>
<center>C+</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center>67--74</center>
</td>
<td>
<center>C</center>
</td>
</tr>
<tr>
<td>
<center>60--66</center>
</td>
<td>
<center>C-</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center>57--59</center>
</td>
<td>
<center>D+</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center>54--56</center>
</td>
<td>
<center>D</center>
</td>
</tr>
<tr>
<td>
<center>51--53</center>
</td>
<td>
<center>D-</center>
</td>
</tr>
<tr align="CENTER" nosave="" valign="CENTER">
<td nosave="">
<center>&lt;=50</center>
</td>
<td>
<center>F</center>
</td>
</tr>
</table></center>
<p>Reminder from the College of Arts &amp; Sciences:  a C (2.0) is
the minimum passing grade in a PASS/NO PASS course (NOT a C-) as well as
the lowest grade one can receive and still count the class toward a major.
</p><p><b>Books on reserve at the Love Library (LL):</b>
</p><ul>
<li>
<i>Foundations of Constraint Satisfaction </i>by Edward Tsang.</li>
</ul>
<b>Books available at the Love Library (LL):</b>
<ul>
<li>
<i>Artificial Intelligence, A Modern Approach</i> (AIMA), by Russell &amp;
Norvig. CALL number Q335 .R86 1995.</li>
</ul>
<b>Other references:</b>
<ul>
<li>
The MIT Encyclopedia of the Cognitive Sciences. CALL  number BF311
.M556 1999, LIB USE ONLY.</li>
<li>
Encyclopedia of artificial intelligence, 1992, SECOND EDITION, call number
Q335 .E53, LIB USE ONLY.</li>
<li>
<a href="http://www.aaai.org/aitopics">AI Topics</a> of the American Association
for Artificial Intelligence</li>
<li>
Web search engines (<a href="www.google.com">Google</a>, <a href="http://www.altavista.com">Altavista</a>,
etc.)</li>
</ul>
<b>Related material from the Web:</b>
<p><i>Some industrial companies and start-ups implementing advanced constraint-based
systems:</i> (listed in random order)
</p><ul>
<li>
<a href="http://www.cosytec.com/english/homepag2.htm">COSYTEC</a>, <a href="http://www.i2.com/">
I2 Technologies</a>,  <a href="http://www.peoplesoft.com/">PeopleSoft/Red
Pepper, </a><a href="http://www.jdedwards.com/">J.D. Edwards/Numetrix </a>(<a href="http://www.jdedwards.com/public/0,1921,0%257E565%257E,00.html">production
scheduling)</a><i>, </i><a href="http://www.jdedwards.com/"> </a><a href="http://www.bluepumpkin.com/">Blue
Pumpkin</a><a href="http://www.calico.com/">,
</a><a href="http://www.ilog.fr/">Ilog,
</a><a href="http://www.trilogy.com/">Trilogy,
</a><a href="http://www.parc-technologies.com/">Parc
Technologies Ltd</a>,
<a href="http://www.carmen.se/">Carmen Systems, </a><a href="http://www.firepond.com/">Firepond</a>,
O<a href="http://www.otsys.com/">n Time Systems Inc.</a>, <i>etc.</i></li>
</ul>
<i>Courses:</i>
<ul>
<li>
<img height="12" src="new.gif" width="31"/><a href="http://www.ics.uci.edu/~dechter/ics-275a/fall-2001/">Constraint
Networks</a> by Rina Dechter</li>
<li>
<img height="12" src="new.gif" width="31"/><a href="Documents/Milano.pdf">Constraint
Programming Approach to AI Applications</a>, by Michela Milano</li>
<li>
<a href="http://kti.ms.mff.cuni.cz/~bartak/ESSLLI2002/index.html">Foundations
of Constraint Satisfaction, ESSLI 2002</a>, by Roman Barak</li>
<li>
<a href="http://kti.ms.mff.cuni.cz/~bartak/constraints/">Constraint Programming:</a>
online textbook by Roman Barták.</li>
<li>
<a href="http://ic-www.arc.nasa.gov/ic/projects/mba/cs329a/#abstract">Reasoning
Methods in AI (CS329A, </a><a href="http://www.stanford.edu/class/cs227/">CS227</a><a href="http://ic-www.arc.nasa.gov/ic/projects/mba/cs329a/#abstract">):</a>
courses by Pandu Nayak.</li>
<li>
Constraint Satisfaction Problems (<a href="http://www.cs.toronto.edu/~fbacchus/csc2512/">CSC2512F</a>):
course by Fahiem Bacchus</li>
<li>
<a href="Documents/Barbara-Smith-95_14.ps">Tutorial on Constraint Programming</a>,
by Barbara Smith.</li>
<li>
<a href="../CSE990-05/PS-Files/McAllester-Notes.ps">Lecture notes</a> by
David McAllester.</li>
<li>
Bacchus' <a href="http://www.cs.toronto.edu/~fbacchus/csc2512/biblio.html">Constraint
Programming Bibliography</a></li>
</ul>
<i>Groups:</i>
<ul>
<li>
<a href="http://liawww.epfl.ch/">LIA@EPFL</a></li>
<li>
<a href="http://www.dcs.st-and.ac.uk/~apes/">APES </a>Group in the UK.</li>
<li>
<a href="http://www.cs.unh.edu/ccc/">Constraint Computation Center</a>
of Freuder in Univ. of New Hampshire.</li>
<li>
<a href="http://4c.ucc.ie/">Cork Constraint Computation Center (4C) </a>of
Freuder in University College Cork, Ireland.</li>
</ul>
<i>Archives and on-line systems:</i>
<ul>
<li>
<img height="12" src="new.gif" width="31"/><a href="Generator.java">Random generator
in Java</a> by Zheying Yang (zyang@cse.unl.edu)</li>
<li>
<a href="http://4c.ucc.ie/~tw/csplib/links.html">Links to Constratint Solvers</a>,
via the <a href="http://4c.ucc.ie/~tw/csplib/">CSPLIB</a></li>
<li>
<a href="http://www.icparc.ic.ac.uk/eclipse/">The ECLiPSe Constraint Logic
Programming System</a></li>
<li>
<a href="http://www.cs.unh.edu/ccc/archive/">Constraints archives</a> at
CCC.</li>
<li>
<a href="http://www.csplib.org/">CSPLib</a>: Problem Library on the Web.</li>
<li>
<a href="http://www.lirmm.fr/~bessiere/generator.html">Random generator
</a>in
C at LIRMM</li>
<li>
<a href="ftp://ftp.cs.strath.ac.uk/local/pat/csp-lab/">Random generato</a>r
in Common Lisp by Patrick Prosser</li>
<li>
<a href="Documents/Bacchus-generator.c">Random generator</a> in C courtesy
of <a href="http://www.cs.toronto.edu/~fbacchus/">Fahiem Bacchus</a> (and
P. van Run).</li>
<li>
<a href="http://www.pms.informatik.uni-muenchen.de/software/jack/">JACK</a>:
a library providing constraint programming and search for Java (high-level
language, generic search engine, and a visualization tool).</li>
</ul>
<i>Conferences</i>:
<ul>
<li>
Constraint Programming (CP), <a href="http://www.aaai.org">AAAI</a>,
<a href="http://www.ijcai.org">IJCAI</a>,
<a href="http://www.eccai.org">ECAI</a>,
<a href="http://www.flairs.com">FLAIRS</a>,
etc.</li>
</ul>
<i>Additional resources:</i><img height="12" src="new.gif" width="31"/>
<ul>
<li>
Lisp resources</li>
<ul>
<li>
<a href="http://csce.unl.edu/~emoss/LispHelp/index.html">Eric Moss: personal
help page with Lisp</a></li>
<li>
Eric Moss:  There is a new <a href="http://www.scieneer.com/">Common
Lisp implementation on the market</a> (beta copy at this point). 
It's supposedly good for multiprocessor systems that need multi-threaded
apps using real OS threads. &lt;http://www.scieneer.com/&gt;</li>
</ul>
<li>
Latex resources</li>
<ul>
<li>
Joel Gompert: <a href="http://www2.eng.cam.ac.uk/~pmg26/hpage/teaching/graphics_LaTeX.html">Getting
memory-efficient, pretty-looking, robust graphics with very fancy robust
labels into LaTeX</a></li>
<li>
Ryan Lim: <a href="Documents/latex_not_so_short_introduction.pdf">The not
so short introduction to LaTex2x</a></li>
</ul>
</ul>
<hr/>
<address>
<a href="mailto:choueiry@cse.unl.edu">Berthe Y. Choueiry</a></address>
<br/>Last modified: <script language="javascript">
document.write("<l>" + Date() + "<\/l><\/P>") 

</script>
</body>
</html>
